<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" basePath="filters" doc:name="HTTP Listener Configuration"/>
    <flow name="multiexprFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/f1" doc:name="HTTP"/>
        <message-filter throwOnUnaccepted="true" doc:name="Message">
            <and-filter>
                <expression-filter expression="#[message.inboundProperties['clientId']!=null]"/>
                <expression-filter expression="#[message.inboundProperties['password']!=null]"/>
            </and-filter>
        </message-filter>
        <logger message="message filter passes success!" level="INFO" doc:name="Logger"/>
        <regex-filter value="#[message.inboundProperties['password']]" pattern="[0-9]" doc:name="Regex"/>
        <logger message="after apssword validation!" level="INFO" doc:name="Logger"/>
        <set-payload value="valid user!" doc:name="Set Payload"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-payload value="invalid data passed!" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
</mule>
